<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tian.mapper.BedInfoMapper">
    <resultMap id="BaseResultMap" type="com.tian.entity.BedInfo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="bed_name" property="bedName" jdbcType="VARCHAR"/>
        <result column="price" property="price" jdbcType="INTEGER"/>
        <result column="department_name" property="departmentName" jdbcType="VARCHAR"/>
        <result column="department_id" property="departmentId" jdbcType="INTEGER"/>
        <result column="operation_user_id" property="operationUserId" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bed_info  where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="insert" parameterType="com.tian.entity.BedInfo">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into bed_info (bed_name, price, department_name,
        department_id, operation_user_id, `status`,
        create_time, update_time)
        values (#{bedName,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, #{departmentName,jdbcType=VARCHAR},
        #{departmentId,jdbcType=INTEGER}, #{operationUserId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.tian.entity.BedInfo">
    update bed_info
    set bed_name = #{bedName,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      department_name = #{departmentName,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      operation_user_id = #{operationUserId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select id, bed_name, price, department_name, department_id, operation_user_id, `status`, 
    create_time, update_time
    from bed_info
    where id = #{id,jdbcType=INTEGER}
  </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select id, bed_name, price, department_name, department_id, operation_user_id, `status`,
        create_time, update_time
        from bed_info
        where `status` = 0
        <if test="bedName!=null">
            AND bed_name = #{bedName,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(1)
        from bed_info
        where `status` = 0
        <if test="bedName!=null">
            AND bed_name = #{bedName,jdbcType=VARCHAR}
        </if>
    </select>
</mapper>